EMPTY=
CONFIGURE_ARGS=--target=x86_64-w64-mingw32
TOP_BUILDDIR=.
TARGET=x86_64-w64-mingw32
# defined in original Makefile.config, but these are replaced by opam.
#prefix=/usr/local
#exec_prefix=${prefix}
PREFIX=%{prefix}%/windows-sysroot
BINDIR=$(PREFIX)/bin
LIBDIR=$(PREFIX)/lib/ocaml
STUBLIBDIR=$(LIBDIR)/stublibs
MANDIR=$(PREFIX)/man
PROGRAMS_MAN_SECTION=1
LIBRARIES_MAN_SECTION=3
HASHBANGSCRIPTS=false
LIBTOOL=$(TOP_BUILDDIR)/libtool
# which C compiler to use
TOOLPREF=
CC=%{conf-gcc-windows64:prefix}%gcc

CC_HAS_DEBUG_PREFIX_MAP=false
AS_HAS_DEBUG_PREFIX_MAP=false
OC_LDFLAGS= -Wl,-E
# C preprocessor througn the C compiler
CPP=%{conf-gcc-windows64:prefix}%cpp

# ranlib
RANLIB=%{conf-gcc-windows64:prefix}%ranlib
RANLIBCMD=%{conf-gcc-windows64:prefix}%ranlib

# ar
ARCMD=%{conf-gcc-windows64:prefix}%ar

# extension of object files
O=o
EXT_OBJ=.o

OUTPUTOBJ=-o $(EMPTY)

# extension of static libraries
A=a
EXT_LIB=.a

# extension of assembler files
S=s
EXT_ASM=.s

# extension of shared libraries
SO=so
EXT_DLL=.dll
SHAREDLIB_CFLAGS=-fPIC

RPATH=

### configuration for the native-code compiler
ARCH=amd64
ARCH64=true
MODEL=default
SYSTEM=mingw64

ASM=%{conf-gcc-windows64:prefix}%as
ASPP=$(CC) -c
ASPPPROFFLAGS=
INSTALL_BYTECODE_PROGRAMS=true
OTHERLIBRARIES=win32unix str dynlink bigarray systhreads

PTHREAD_LINK=
PTHREAD_CAML_LINK=

UNIX_OR_WIN32=win32
UNIXLIB=win32unix
LIBBFD_LINK=
LIBBFD_INCLUDE=
INSTALL_SOURCE_ARTIFACTS=true

OC_CFLAGS=-O2 -mms-bitfields -fno-strict-aliasing -Wall -fno-tree-vrp
OC_CPPFLAGS=-DCAML_NAME_SPACE -DUNICODE -D_UNICODE -DWINDOWS_UNICODE=$(WINDOWS_UNICODE)
OCAMLC_CFLAGS=-O2 -mms-bitfields

OCAMLC_CPPFLAGS= -D_FILE_OFFSET_BITS=64 -D_REENTRANT
BYTECCLIBS=-lws2_32 -lversion
EXE=.exe
OUTPUTEXE=-o $(EMPTY)
SUPPORTS_SHARED_LIBRARIES=true
MKSHAREDLIBRPATH=
DYNLINKOPTS=
NATDYNLINK=$(SUPPORTS_SHARED_LIBRARIES)
NATDYNLINKOPTS=
SYSLIB=-l$(1)
### How to build a static library
MKLIB=%{conf-gcc-windows64:prefix}%ar rc $(1) $(2); %{conf-gcc-windows64:prefix}%ranlib $(1)
OCAMLOPT_CFLAGS=-O2 -mms-bitfields
OCAMLOPT_CPPFLAGS= -D_FILE_OFFSET_BITS=64 -D_REENTRANT
NATIVECCLIBS=$(BYTECCLIBS)
SYSTHREAD_SUPPORT=true
PACKLD=$(PARTIALLD) -o
IFLEXDIR=-I%{flexdll-windows:lib}%
EXTRALIBS=
CCOMPTYPE=cc
TOOLCHAIN=mingw
CMXS=cmxa

# On Windows
MKEXE=$(MKEXE_ANSI) $(if $(LDFLAGS),-link "$(LDFLAGS)")
MKDLL=$(FLEXLINK)
MKMAINDLL=$(FLEXLINK) -maindll

MKEXEDEBUGFLAG=-g
RUNTIMED=true
RUNTIMEI=
WITH_DEBUGGER=ocamldebugger
WITH_CAMLTEX=false
WITH_OCAMLDOC=ocamldoc
ASM_CFI_SUPPORTED=false
WITH_FRAME_POINTERS=false
WITH_SPACETIME=%{conf-spacetime-windows:installed?true:false}%
ENABLE_CALL_COUNTS=false
WITH_PROFINFO=%{conf-spacetime-windows:installed?true:false}%
PROFINFO_WIDTH=0
LIBUNWIND_AVAILABLE=false
LIBUNWIND_INCLUDE_FLAGS=
LIBUNWIND_LINK_FLAGS=
#TARGET
HOST=x86_64-pc-linux-gnu
FLAMBDA=%{conf-flambda-windows:installed?true:false}%
WITH_FLAMBDA_INVARIANTS=false
FORCE_SAFE_STRING=false
DEFAULT_SAFE_STRING=true
WINDOWS_UNICODE=1
AFL_INSTRUMENT=false
MAX_TESTSUITE_DIR_RETRIES=0
FLAT_FLOAT_ARRAY=true
AWK=gawk

# use $(CC) always
MKEXE_BOOT=$(CC) $(CFLAGS) $(LDFLAGS) $(OUTPUTEXE)$(1) $(2)

# use native programs instead of cygwin's one
FLEXLINK=%{flexdll-windows:lib}%/flexlink -chain $(SYSTEM) -stack 16777216 -link -static-libgcc
MKEXE_ANSI=$(FLEXLINK) -exe

# DISTRIB=$(prefix)
# OTOPDIR=$(WINTOPDIR)
# CTOPDIR=$(WINTOPDIR)
# CYGPATH=cygpath -m
# DIFF=/usr/bin/diff -q --strip-trailing-cr
# FIND=/usr/bin/find
# SORT=/usr/bin/sort
# SET_LD_PATH=PATH="$(PATH):$(LD_PATH)"
# FLEXLINK_CMD=flexlink
# MKEXE_ANSI=$(FLEXLINK) -exe
# FLEXDLL_CHAIN=
# # FLEXLINK_FLAGS must be safe to insert in an OCaml string
# #   (see ocamlmklibconfig.ml in tools/Makefile)
# FLEXLINK_FLAGS=
# FLEXLINK=$(FLEXLINK_CMD) $(FLEXLINK_FLAGS)

# other environment variables
BYTERUN=ocamlrun
CAMLRUN=%{bin}%/ocamlrun
OCAMLRUN=%{bin}%/ocamlrun
CAMLYACC=%{bin}%/ocamlyacc
OCAMLYACC=%{bin}%/ocamlyacc
GRAPHLIB=win32graph

LDFLAGS=-municode
BYTECCDBGCOMPOPTS=-g
SHAREDCCCOMPOPTS=
#ml let syslib x = "-l"^x;;

#ml let mklib out files opts = Printf.sprintf "%{conf-gcc-windows64:prefix}%ar rc %s %s %s; %{conf-gcc-windows64:prefix}%ranlib %s" out opts files out;;
OCAML_OS_TYPE=Win32
NATIVECCPROFOPTS=$(BYTECCCOMPOPTS)
PROFILING=false
DEBUGGER=ocamldebugger
CC_PROFILE=-pg
PARTIALLD=%{conf-gcc-windows64:prefix}%ld -r
SHARED=shared
